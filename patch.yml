---
- hosts: localhost
  become: true
  become_user: root
  tasks:
          - name: Verify APP/Database are running or not
            shell: if ps -eaf | egrep 'httpd' | grep -v grep > /dev/null; then echo 'process_running'; else echo 'process_not_running'; fi
            ignore_errors: true
            register: app_proc_check
          - debug: msg="{{ app_proc_check.stdout }}"
          - name: Decision point to start patching
            fail:
             msg="{{ inventory_hostname }} having running applications, please stop first and then attempt patching"
            when: app_proc_check.stdout == "process_running"
          - name: Copy the Kernel Patch Repo file
            copy:
             src: /home/ravi/patching/kernel.repo
             dest: /etc/yum.repos.d/
          - name: Current Kernel Version
            shell: uname -r
            register: current_kernel
          - name: Initiating Patching
            yum: name=kernel state=latest
            register: yum_update
          - debug: msg="kernel has been updated"
            when: yum_update.rc == 0
          - name: Check if reboot is required or not
            shell: kernel_new=$ (rpm -qa --last kernel | head -1 | awk '{print $1}' | sed 's/kernel-//g'); kernel_old=$ (uname -r); if [[ $kernel_new != $kernel_old ]] then echo "reboot is required"; else echo "reboot is not required"; fi
            ignore_errors: true
            register: reboot_check
          - debug: msg="{{ reboot_check.stdout }}"
          - name: Rebooting after patching
            shell: "shutdown -r y now"
            async: 1
            poll: 0
          - name: Wait the system to come up
            pause:
             minutes: 1
          - name: New Kernel Version
            shell: uname -r
            register: new_kernel
          - debug: msg="New Version is {{ new_kernel.stdout }} and old kernel version was {{ current_kernel.stdout }}" 
